# -*- coding: utf-8 -*-
"""p2_s3_andres_flores

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gHvqf3zs5Gu0JoSO-cfhbpygnzdZjrGP
"""

#Practica2. 
#Problema A. 
#Dos palabras son anagramas si tienen la mismas letras pero, en otro orden.
#Por ejemplo "torpes" y postres, son anagramas, mientras que apartar y raptar tiene una r de mas y una de menos.
#Diseñe un programa si un par de palabras suministradas como datos son anagramas.

#Problema B
#Un tautograma es una oracion en la que cada palabra comienza por la misma letra. Por ejemplo:
#Pedro padece por programacion. Es un tautograma valido, mientras que "martines fue a buscar a pedro" no lo es. 
#Diseñe un programa que tenga como salida True en caso de que la oracion ingresada sea un tautograma y False si no lo es.

#Problema A

work_1= input("Ingrese la primera palabra: ")
work_1= work_1.lower()
work_2= input("Ingrese la segunda palabra: ")
work_2= work_2.lower()

caracteres_1= len(work_1)
caracteres_2= len(work_2)
orden_1= sorted(work_1)
orden_2= sorted(work_2) 

if caracteres_1 == caracteres_2 and orden_1 == orden_2:
  print("Si son anagramas.")
else: 
  print("Las palabras ingresadas no son un anagrama.")

#EJERCICIO B

phrase = input("ingrese una frase, omitiendo caracteres especiales: ")



phrase= phrase.lower()
phrase= phrase.split(" ")
first_word= phrase[0][0]
size= len(phrase)
acum=0

for i in range (0, len(phrase)):
  individual_word= phrase[i]
  if individual_word[0] == first_word: 
    acum= acum + 1
  else:
    print("False")
if acum == len(phrase):
  print("True")